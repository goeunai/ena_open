{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Ena open API",
    "description": "외부 데이터를 수신하는 API들입니다."
  },
  "host": "localhost:7000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Home"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/data/image": {
      "post": {
        "tags": [
          "Data"
        ],
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "라온 서버에서 전송할 데이터 양식입니다.",
            "schema": {
              "type": "object",
              "properties": {
                "farmId": {
                  "type": "string",
                  "example": "goeun_farm"
                },
                "houseId": {
                  "type": "string",
                  "example": "goeun_1"
                },
                "sequence": {
                  "type": "number",
                  "example": 1
                },
                "sequenceDate": {
                  "type": "string",
                  "example": "20230101"
                },
                "totalRounds": {
                  "type": "number",
                  "example": 3
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "round": {
                        "type": "number",
                        "example": 3
                      },
                      "category": {
                        "type": "string",
                        "example": "sideFruit"
                      },
                      "image": {
                        "type": "string",
                        "example": "...byte stream... 9"
                      }
                    }
                  }
                }
              },
              "required": [
                "farmId",
                "houseId",
                "sequence",
                "sequenceDate",
                "totalRounds",
                "images"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "example": 10
                },
                "success": {
                  "type": "number",
                  "example": 9
                },
                "fail": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "msg": {
                        "type": "string",
                        "example": "farmId는 필수값입니다."
                      },
                      "param": {
                        "type": "string",
                        "example": "farmId"
                      },
                      "location": {
                        "type": "string",
                        "example": "body"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Https Only"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "메세지 || 서버 에러"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  }
}